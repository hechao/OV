<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\STM324xG_EVAL\STM324xG_EVAL.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\STM324xG_EVAL\STM324xG_EVAL.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, RVCT4.0 [Build 728]: Last Updated: Sun May 25 16:36:59 2008
<BR><P>
<H3>Maximum Stack Usage =        148 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; FSMC_Init &rArr; GPIO_Init
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[2006840]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2006840]">ADC_IRQHandler</a><BR>
 <LI><a href="#[e49530]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[e49530]">BusFault_Handler</a><BR>
 <LI><a href="#[e494b8]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[e494b8]">HardFault_Handler</a><BR>
 <LI><a href="#[e4947c]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[e4947c]">MemManage_Handler</a><BR>
 <LI><a href="#[e49314]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[e49314]">UsageFault_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[2006a98]">Reset_Handler</a>
 <LI><a href="#[e49440]">NMI_Handler</a>
 <LI><a href="#[e494b8]">HardFault_Handler</a>
 <LI><a href="#[e4947c]">MemManage_Handler</a>
 <LI><a href="#[e49530]">BusFault_Handler</a>
 <LI><a href="#[e49314]">UsageFault_Handler</a>
 <LI><a href="#[e4938c]">SVC_Handler</a>
 <LI><a href="#[e494f4]">DebugMon_Handler</a>
 <LI><a href="#[e49404]">PendSV_Handler</a>
 <LI><a href="#[e49350]">SysTick_Handler</a>
 <LI><a href="#[2005544]">WWDG_IRQHandler</a>
 <LI><a href="#[2005c10]">PVD_IRQHandler</a>
 <LI><a href="#[2005a30]">TAMP_STAMP_IRQHandler</a>
 <LI><a href="#[2005b5c]">RTC_WKUP_IRQHandler</a>
 <LI><a href="#[2005fd0]">FLASH_IRQHandler</a>
 <LI><a href="#[2005bd4]">RCC_IRQHandler</a>
 <LI><a href="#[2006174]">EXTI0_IRQHandler</a>
 <LI><a href="#[20060fc]">EXTI1_IRQHandler</a>
 <LI><a href="#[20060c0]">EXTI2_IRQHandler</a>
 <LI><a href="#[2006084]">EXTI3_IRQHandler</a>
 <LI><a href="#[2006048]">EXTI4_IRQHandler</a>
 <LI><a href="#[20065ac]">DMA1_Stream0_IRQHandler</a>
 <LI><a href="#[2006570]">DMA1_Stream1_IRQHandler</a>
 <LI><a href="#[2006534]">DMA1_Stream2_IRQHandler</a>
 <LI><a href="#[20064f8]">DMA1_Stream3_IRQHandler</a>
 <LI><a href="#[20064bc]">DMA1_Stream4_IRQHandler</a>
 <LI><a href="#[2006480]">DMA1_Stream5_IRQHandler</a>
 <LI><a href="#[2006444]">DMA1_Stream6_IRQHandler</a>
 <LI><a href="#[2006840]">ADC_IRQHandler</a>
 <LI><a href="#[2006750]">CAN1_TX_IRQHandler</a>
 <LI><a href="#[2006804]">CAN1_RX0_IRQHandler</a>
 <LI><a href="#[20067c8]">CAN1_RX1_IRQHandler</a>
 <LI><a href="#[200678c]">CAN1_SCE_IRQHandler</a>
 <LI><a href="#[200600c]">EXTI9_5_IRQHandler</a>
 <LI><a href="#[20059f4]">TIM1_BRK_TIM9_IRQHandler</a>
 <LI><a href="#[2005940]">TIM1_UP_TIM10_IRQHandler</a>
 <LI><a href="#[200597c]">TIM1_TRG_COM_TIM11_IRQHandler</a>
 <LI><a href="#[20059b8]">TIM1_CC_IRQHandler</a>
 <LI><a href="#[2005904]">TIM2_IRQHandler</a>
 <LI><a href="#[20058c8]">TIM3_IRQHandler</a>
 <LI><a href="#[200588c]">TIM4_IRQHandler</a>
 <LI><a href="#[2005ea4]">I2C1_EV_IRQHandler</a>
 <LI><a href="#[2005ee0]">I2C1_ER_IRQHandler</a>
 <LI><a href="#[2005e2c]">I2C2_EV_IRQHandler</a>
 <LI><a href="#[2005e68]">I2C2_ER_IRQHandler</a>
 <LI><a href="#[2005ae4]">SPI1_IRQHandler</a>
 <LI><a href="#[e493c8]">SPI2_IRQHandler</a>
 <LI><a href="#[2005634]">USART1_IRQHandler</a>
 <LI><a href="#[20055f8]">USART2_IRQHandler</a>
 <LI><a href="#[20055bc]">USART3_IRQHandler</a>
 <LI><a href="#[2006138]">EXTI15_10_IRQHandler</a>
 <LI><a href="#[2005b98]">RTC_Alarm_IRQHandler</a>
 <LI><a href="#[2005d3c]">OTG_FS_WKUP_IRQHandler</a>
 <LI><a href="#[200579c]">TIM8_BRK_TIM12_IRQHandler</a>
 <LI><a href="#[20056e8]">TIM8_UP_TIM13_IRQHandler</a>
 <LI><a href="#[2005724]">TIM8_TRG_COM_TIM14_IRQHandler</a>
 <LI><a href="#[2005760]">TIM8_CC_IRQHandler</a>
 <LI><a href="#[2006408]">DMA1_Stream7_IRQHandler</a>
 <LI><a href="#[2005f58]">FSMC_IRQHandler</a>
 <LI><a href="#[2005b20]">SDIO_IRQHandler</a>
 <LI><a href="#[2005850]">TIM5_IRQHandler</a>
 <LI><a href="#[2005a6c]">SPI3_IRQHandler</a>
 <LI><a href="#[20056ac]">UART4_IRQHandler</a>
 <LI><a href="#[2005670]">UART5_IRQHandler</a>
 <LI><a href="#[2005814]">TIM6_DAC_IRQHandler</a>
 <LI><a href="#[20057d8]">TIM7_IRQHandler</a>
 <LI><a href="#[20063cc]">DMA2_Stream0_IRQHandler</a>
 <LI><a href="#[2006390]">DMA2_Stream1_IRQHandler</a>
 <LI><a href="#[2006354]">DMA2_Stream2_IRQHandler</a>
 <LI><a href="#[2006318]">DMA2_Stream3_IRQHandler</a>
 <LI><a href="#[20062dc]">DMA2_Stream4_IRQHandler</a>
 <LI><a href="#[20061ec]">ETH_IRQHandler</a>
 <LI><a href="#[20061b0]">ETH_WKUP_IRQHandler</a>
 <LI><a href="#[2006660]">CAN2_TX_IRQHandler</a>
 <LI><a href="#[2006714]">CAN2_RX0_IRQHandler</a>
 <LI><a href="#[20066d8]">CAN2_RX1_IRQHandler</a>
 <LI><a href="#[200669c]">CAN2_SCE_IRQHandler</a>
 <LI><a href="#[2005d78]">OTG_FS_IRQHandler</a>
 <LI><a href="#[20062a0]">DMA2_Stream5_IRQHandler</a>
 <LI><a href="#[2006264]">DMA2_Stream6_IRQHandler</a>
 <LI><a href="#[2006228]">DMA2_Stream7_IRQHandler</a>
 <LI><a href="#[2005580]">USART6_IRQHandler</a>
 <LI><a href="#[2005db4]">I2C3_EV_IRQHandler</a>
 <LI><a href="#[2005df0]">I2C3_ER_IRQHandler</a>
 <LI><a href="#[2005cc4]">OTG_HS_EP1_OUT_IRQHandler</a>
 <LI><a href="#[2005d00]">OTG_HS_EP1_IN_IRQHandler</a>
 <LI><a href="#[2005c4c]">OTG_HS_WKUP_IRQHandler</a>
 <LI><a href="#[2005c88]">OTG_HS_IRQHandler</a>
 <LI><a href="#[20065e8]">DCMI_IRQHandler</a>
 <LI><a href="#[2006624]">CRYP_IRQHandler</a>
 <LI><a href="#[2005f1c]">HASH_RNG_IRQHandler</a>
 <LI><a href="#[2005f94]">FPU_IRQHandler</a>
 <LI><a href="#[e4ac28]">main</a>
 <LI><a href="#[2006e94]">SystemInit</a>
 <LI><a href="#[2005418]">__main</a>
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[2005418]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(.text)
</UL>
<P><STRONG><a name="[20050d0]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[2004fa4]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2004d4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[2004f68]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[2004d4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[2004e78]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7.o(.ARM.Collect$$$$00000007))

<P><STRONG><a name="[2006a98]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2006840]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2006840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2006840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2006804]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[20067c8]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[200678c]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2006750]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2006714]"></a>CAN2_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[20066d8]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[200669c]"></a>CAN2_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2006660]"></a>CAN2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2006624]"></a>CRYP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[20065e8]"></a>DCMI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[20065ac]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2006570]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2006534]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[20064f8]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[20064bc]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2006480]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2006444]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2006408]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[20063cc]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2006390]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2006354]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2006318]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[20062dc]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[20062a0]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2006264]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2006228]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[20061ec]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[20061b0]"></a>ETH_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2006174]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2006138]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[20060fc]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[20060c0]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2006084]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2006048]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[200600c]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2005fd0]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2005f94]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2005f58]"></a>FSMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2005f1c]"></a>HASH_RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2005ee0]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2005ea4]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2005e68]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2005e2c]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2005df0]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2005db4]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2005d78]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2005d3c]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2005d00]"></a>OTG_HS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2005cc4]"></a>OTG_HS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2005c88]"></a>OTG_HS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2005c4c]"></a>OTG_HS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2005c10]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2005bd4]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2005b98]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2005b5c]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2005b20]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2005ae4]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2005a6c]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2005a30]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[20059f4]"></a>TIM1_BRK_TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[20059b8]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[200597c]"></a>TIM1_TRG_COM_TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2005940]"></a>TIM1_UP_TIM10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2005904]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[20058c8]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[200588c]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2005850]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2005814]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[20057d8]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[200579c]"></a>TIM8_BRK_TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2005760]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2005724]"></a>TIM8_TRG_COM_TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[20056e8]"></a>TIM8_UP_TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[20056ac]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2005670]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2005634]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[20055f8]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[20055bc]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2005580]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2005544]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2004d4c]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2004f68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[2004fa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[2004d10]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[e4abec]"></a>Active_Window</STRONG> (Thumb, 64 bytes, Stack size 12 bytes, ra8875.o(i.Active_Window))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Active_Window
</UL>
<BR>[Called By]<UL><LI><a href="#[e4ac28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e49530]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[e49530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[e49530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[e4abb0]"></a>Camera_Config</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ov.o(i.Camera_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = Camera_Config &rArr; OV_Init &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[e46470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV_QVGAConfig
<LI><a href="#[e464ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV_Init
<LI><a href="#[e464e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV_HW_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[e4ac28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e4ab74]"></a>DCMI_CaptureCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_dcmi.o(i.DCMI_CaptureCmd))
<BR><BR>[Called By]<UL><LI><a href="#[e4ac28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e4ab38]"></a>DCMI_Cmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_dcmi.o(i.DCMI_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[e4ac28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e46434]"></a>DCMI_Init</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, stm32f4xx_dcmi.o(i.DCMI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = DCMI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[e464ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV_Init
</UL>

<P><STRONG><a name="[e4aafc]"></a>DMA_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_dma.o(i.DMA_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[e4ac28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e463f8]"></a>DMA_DeInit</STRONG> (Thumb, 272 bytes, Stack size 28 bytes, stm32f4xx_dma.o(i.DMA_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = DMA_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[e464ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV_Init
</UL>

<P><STRONG><a name="[e463bc]"></a>DMA_Init</STRONG> (Thumb, 80 bytes, Stack size 12 bytes, stm32f4xx_dma.o(i.DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = DMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[e464ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV_Init
</UL>

<P><STRONG><a name="[e494f4]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[e4aac0]"></a>Display_ON</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ra8875.o(i.Display_ON))
<BR><BR>[Called By]<UL><LI><a href="#[e4ac28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e4aa84]"></a>FSMC_Init</STRONG> (Thumb, 376 bytes, Stack size 112 bytes, ra8875.o(i.FSMC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = FSMC_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e470a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB3PeriphClockCmd
<LI><a href="#[e470dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NORSRAMInit
<LI><a href="#[e47118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NORSRAMCmd
<LI><a href="#[e485b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[e4884c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[e48888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[e4ac28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e47118]"></a>FSMC_NORSRAMCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f4xx_fsmc.o(i.FSMC_NORSRAMCmd))
<BR><BR>[Called By]<UL><LI><a href="#[e4aa84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_Init
</UL>

<P><STRONG><a name="[e470dc]"></a>FSMC_NORSRAMInit</STRONG> (Thumb, 192 bytes, Stack size 12 bytes, stm32f4xx_fsmc.o(i.FSMC_NORSRAMInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = FSMC_NORSRAMInit
</UL>
<BR>[Called By]<UL><LI><a href="#[e4aa84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_Init
</UL>

<P><STRONG><a name="[e48888]"></a>GPIO_Init</STRONG> (Thumb, 122 bytes, Stack size 20 bytes, stm32f4xx_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[e464e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV_HW_Init
<LI><a href="#[e48900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV_I2C_LowLevel_Init
<LI><a href="#[e4a8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM_EVAL_LEDInit
<LI><a href="#[e4a8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV_Reset
<LI><a href="#[e4a994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Reset
<LI><a href="#[e4a9d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Mode8080
<LI><a href="#[e4aa84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_Init
</UL>

<P><STRONG><a name="[e4884c]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f4xx_gpio.o(i.GPIO_PinAFConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[e464e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV_HW_Init
<LI><a href="#[e48900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV_I2C_LowLevel_Init
<LI><a href="#[e4aa84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_Init
</UL>

<P><STRONG><a name="[e494b8]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[e494b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[e494b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[e48810]"></a>I2C_AcknowledgeConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(i.I2C_AcknowledgeConfig))
<BR><BR>[Called By]<UL><LI><a href="#[e4a91c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV_Reg_Get
</UL>

<P><STRONG><a name="[e487d4]"></a>I2C_CheckEvent</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(i.I2C_CheckEvent))
<BR><BR>[Called By]<UL><LI><a href="#[e488c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV_Reg_Set
<LI><a href="#[e4a91c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV_Reg_Get
</UL>

<P><STRONG><a name="[e48798]"></a>I2C_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(i.I2C_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[e4a958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV_I2C_Init
</UL>

<P><STRONG><a name="[e4875c]"></a>I2C_GenerateSTART</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(i.I2C_GenerateSTART))
<BR><BR>[Called By]<UL><LI><a href="#[e488c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV_Reg_Set
<LI><a href="#[e4a91c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV_Reg_Get
</UL>

<P><STRONG><a name="[e48720]"></a>I2C_GenerateSTOP</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(i.I2C_GenerateSTOP))
<BR><BR>[Called By]<UL><LI><a href="#[e488c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV_Reg_Set
<LI><a href="#[e4a91c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV_Reg_Get
</UL>

<P><STRONG><a name="[e486e4]"></a>I2C_GetFlagStatus</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(i.I2C_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[e488c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV_Reg_Set
<LI><a href="#[e4a91c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV_Reg_Get
</UL>

<P><STRONG><a name="[e486a8]"></a>I2C_Init</STRONG> (Thumb, 172 bytes, Stack size 32 bytes, stm32f4xx_i2c.o(i.I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = I2C_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[1a172e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[e4a958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV_I2C_Init
</UL>

<P><STRONG><a name="[e4866c]"></a>I2C_ReceiveData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(i.I2C_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[e4a91c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV_Reg_Get
</UL>

<P><STRONG><a name="[e48630]"></a>I2C_Send7bitAddress</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(i.I2C_Send7bitAddress))
<BR><BR>[Called By]<UL><LI><a href="#[e488c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV_Reg_Set
<LI><a href="#[e4a91c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV_Reg_Get
</UL>

<P><STRONG><a name="[e485f4]"></a>I2C_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_i2c.o(i.I2C_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[e488c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV_Reg_Set
<LI><a href="#[e4a91c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV_Reg_Get
</UL>

<P><STRONG><a name="[e4aa48]"></a>LCD_DataWrite</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ra8875.o(i.LCD_DataWrite))
<BR><BR>[Called By]<UL><LI><a href="#[e4ac28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e4aa0c]"></a>LCD_Init</STRONG> (Thumb, 146 bytes, Stack size 12 bytes, ra8875.o(i.LCD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LCD_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e47154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[e4ac28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e4a9d0]"></a>LCD_Mode8080</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, ra8875.o(i.LCD_Mode8080))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = LCD_Mode8080 &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e485b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[e48888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[e4ac28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e4a994]"></a>LCD_Reset</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, ra8875.o(i.LCD_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = LCD_Reset &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e485b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[e48888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[e4ac28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e4947c]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[e4947c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[e4947c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[e49440]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[e464e8]"></a>OV_HW_Init</STRONG> (Thumb, 324 bytes, Stack size 32 bytes, ov.o(i.OV_HW_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = OV_HW_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e46380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB2PeriphClockCmd
<LI><a href="#[e485b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[e4884c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[e48888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[e4abb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_Config
</UL>

<P><STRONG><a name="[e4a958]"></a>OV_I2C_Init</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, i2c.o(i.OV_I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = OV_I2C_Init &rArr; OV_I2C_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e486a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
<LI><a href="#[e48798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Cmd
<LI><a href="#[e48900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV_I2C_LowLevel_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[e4ac28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e48900]"></a>OV_I2C_LowLevel_Init</STRONG> (Thumb, 312 bytes, Stack size 40 bytes, i2c.o(i.OV_I2C_LowLevel_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = OV_I2C_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e48504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[e48540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
<LI><a href="#[e4857c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[e485b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[e4884c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[e48888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[e4a958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV_I2C_Init
</UL>

<P><STRONG><a name="[e464ac]"></a>OV_Init</STRONG> (Thumb, 134 bytes, Stack size 88 bytes, ov.o(i.OV_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = OV_Init &rArr; DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[e46380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB2PeriphClockCmd
<LI><a href="#[e463bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[e463f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[e46434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCMI_Init
<LI><a href="#[e485b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[e4abb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_Config
</UL>

<P><STRONG><a name="[e46470]"></a>OV_QVGAConfig</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, ov.o(i.OV_QVGAConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = OV_QVGAConfig &rArr; OV_Reset &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e488c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV_Reg_Set
<LI><a href="#[e4a8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV_Reset
</UL>
<BR>[Called By]<UL><LI><a href="#[e4abb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_Config
</UL>

<P><STRONG><a name="[e4a91c]"></a>OV_Reg_Get</STRONG> (Thumb, 204 bytes, Stack size 24 bytes, i2c.o(i.OV_Reg_Get))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = OV_Reg_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[e485f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendData
<LI><a href="#[e48630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Send7bitAddress
<LI><a href="#[e4866c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReceiveData
<LI><a href="#[e486e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetFlagStatus
<LI><a href="#[e48720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTOP
<LI><a href="#[e4875c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTART
<LI><a href="#[e487d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_CheckEvent
<LI><a href="#[e48810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_AcknowledgeConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[e4ac28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e488c4]"></a>OV_Reg_Set</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, i2c.o(i.OV_Reg_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = OV_Reg_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[e485f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendData
<LI><a href="#[e48630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Send7bitAddress
<LI><a href="#[e486e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetFlagStatus
<LI><a href="#[e48720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTOP
<LI><a href="#[e4875c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTART
<LI><a href="#[e487d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_CheckEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[e46470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV_QVGAConfig
</UL>

<P><STRONG><a name="[e4a8e0]"></a>OV_Reset</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, ov.o(i.OV_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = OV_Reset &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e485b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[e48888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[e46470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV_QVGAConfig
<LI><a href="#[e4ac28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e49404]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[e485b8]"></a>RCC_AHB1PeriphClockCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_AHB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[e464ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV_Init
<LI><a href="#[e464e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV_HW_Init
<LI><a href="#[e48900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV_I2C_LowLevel_Init
<LI><a href="#[e4a8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM_EVAL_LEDInit
<LI><a href="#[e4a8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV_Reset
<LI><a href="#[e4a994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Reset
<LI><a href="#[e4a9d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Mode8080
<LI><a href="#[e4aa84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_Init
</UL>

<P><STRONG><a name="[e46380]"></a>RCC_AHB2PeriphClockCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_AHB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[e464ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV_Init
<LI><a href="#[e464e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV_HW_Init
</UL>

<P><STRONG><a name="[e470a0]"></a>RCC_AHB3PeriphClockCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_AHB3PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[e4aa84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_Init
</UL>

<P><STRONG><a name="[e4857c]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[e48900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV_I2C_LowLevel_Init
</UL>

<P><STRONG><a name="[e48540]"></a>RCC_APB1PeriphResetCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_APB1PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[e48900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV_I2C_LowLevel_Init
</UL>

<P><STRONG><a name="[e48504]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[e48900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV_I2C_LowLevel_Init
</UL>

<P><STRONG><a name="[1a172e4]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 154 bytes, Stack size 12 bytes, stm32f4xx_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[e486a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
</UL>

<P><STRONG><a name="[e493c8]"></a>SPI2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.SPI2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[e4a8a4]"></a>STM_EVAL_LEDInit</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, stm324xg_eval.o(i.STM_EVAL_LEDInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = STM_EVAL_LEDInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e485b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[e48888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[e4ac28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e4938c]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[e4a868]"></a>Set_CursPositon</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, ra8875.o(i.Set_CursPositon))
<BR><BR>[Called By]<UL><LI><a href="#[e4ac28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e49350]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2006e94]"></a>SystemInit</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, system_stm32f4xx.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemInit
</UL>
<BR>[Calls]<UL><LI><a href="#[20071dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(.text)
</UL>
<P><STRONG><a name="[e49314]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[e49314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[e49314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f4xx.o(RESET)
</UL>
<P><STRONG><a name="[2004950]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[2004914]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[20048d8]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[e47154]"></a>delay</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ra8875.o(i.delay))
<BR><BR>[Called By]<UL><LI><a href="#[e4aa0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[e4ac28]"></a>main</STRONG> (Thumb, 212 bytes, Stack size 16 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = main &rArr; FSMC_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e4a868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_CursPositon
<LI><a href="#[e4a8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM_EVAL_LEDInit
<LI><a href="#[e4a8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV_Reset
<LI><a href="#[e4a91c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV_Reg_Get
<LI><a href="#[e4a958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OV_I2C_Init
<LI><a href="#[e4a994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Reset
<LI><a href="#[e4a9d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Mode8080
<LI><a href="#[e4aa0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[e4aa48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DataWrite
<LI><a href="#[e4aa84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_Init
<LI><a href="#[e4aac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Display_ON
<LI><a href="#[e4aafc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[e4ab38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCMI_Cmd
<LI><a href="#[e4ab74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCMI_CaptureCmd
<LI><a href="#[e4abb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Camera_Config
<LI><a href="#[e4abec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Active_Window
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry7.o(.ARM.Collect$$$$00000007)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[20071dc]"></a>SetSysClock</STRONG> (Thumb, 196 bytes, Stack size 0 bytes, system_stm32f4xx.o(i.SetSysClock))
<BR><BR>[Called By]<UL><LI><a href="#[2006e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
